########################################################################################################################
# Happy Hare klipper模块主要配置参数
#
# 根据您的设置编辑此文件
#
# 请注意，宏配置是在“mmu_macro_vars.cfg”中单独指定的。
# 完整详细信息在 https://github.com/moggieuk/Happy-Hare/tree/main/doc/configuration.md
#
[mmu]
happy_hare_version: {happy_hare_version}	# 别乱，用于升级检测
#
# 供应​​商和版本配置对于定义 MMU 的功能和基本 CAD 尺寸非常重要。这些可以
# 所有这些都可以用文档中详细说明的“cad”参数覆盖，但供应商设置可以节省时间。
#
# ERCF
# 1.1原创设计，为Sprigy添加“s”后缀，为Binky添加“b”后缀，为Triple-Decky添加“t”后缀
# 例如“1.1sb”适用于 v1.1，带有 Springy mod 和 Binky 编码器
#
# 2.0新社区ERCFv2
#
# Tradrack
# 1.0 如果安装了使用编码器则添加“e”
#
# Prusa
# -即将推出（暂时使用其他）
#
# Other
# -需要进一步自定义“cad”参数的通用设置。请参阅最后的文档和部分
#
mmu_vendor: Tradrack			# MMU家族
mmu_version: 1.0e			# MMU硬件版本号（添加上面记录的mod后缀）
mmu_num_gates: {mmu_num_gates} 			# 选择器门的数量


# MMU 硬件限制 -----------------------------------------------------------------------------------------------------------
#
# 定义 MMU 的物理限制。无论单独的速度设置如何，这些设置都会受到尊重。
#
gear_max_velocity: 300			# 无论具体参数如何，都不得超过齿轮速度
gear_max_accel: 1500			# 无论具体参数如何，都不得超过齿轮加速度
selector_max_velocity: 250		# 无论具体参数如何，都不得超过选择器速度
selector_max_accel: 1200		# 无论具体参数如何，都不得超过选择器加速度


# 伺服配置  -------------------------------------------------------------------------------------------------
#
# 舵机在三个指定位置的角度
# up = 选择工具并且允许灯丝自由移动通过浇口
# down = 抓住灯丝
# move = 准备伺服器以进行选择器移动（可选 -默认向上）
# V2.4 on：这些位置仅用于初始配置，它们被替换为“mmu_vars.cfg”中校准的伺服位置
#
# 请注意，在停机时保持伺服处于活动状态会给电子设备带来压力，不建议与 EASY-BRD 或 ERB 板一起使用
# 除非 5v 电源已得到改进，并且标准 ERCF 构建不需要它
# 确保您的硬件适合该工作！
#
servo_up_angle: 180			# ERCF：MG90S：30；萨沃克斯 SH0255MG：140；交易记录：145
servo_down_angle: 0			# ERCF：MG90S：140；萨沃克斯 SH0255MG: 30 ;交易轨道：1
servo_move_angle: 180			# 移动选择器时使用的可选角度（默认为向上位置）
servo_duration: 0.5			# 发送至舵机的 PWM 突发持续时间（自动关闭）
servo_dwell: 0.5			# 给伺服器在下一次移动之前完成移动的最短时间
servo_always_active: 0		# 注意：1=强制伺服始终保持活动状态，0=运动后释放
servo_active_down: 0			# 注意：1=仅在向下时强制伺服保持活动状态，0=移动后释放
servo_buzz_gear_on_down: 0		# 是否让齿轮步进器“嗡嗡”向下以帮助啮合

# MMU CUT   -------------------------------------------------------------------------------------------------
#
# MMU切刀舵机控制
#
servo_closed_angle: 180    # Bowden 对齐 MMU 的闭合位置伺服角度
servo_open_angle: 58	   # 伺服角度打开刀具并将 Bowden 移离 MMU
servo_cut_angle: 0 	       # 伺服角度打开刀具并切割耗材
servo_cut_duration: 0.5    # PWM脉冲激活伺服的时间（s）
servo_cut_dwell: 0.5	   # 让舵机到达其位置的时间（s）

# MMU切刀的移动控制
#
cut_feed_length: 25	       # 从选择器检测位置到刀片位置的距离（毫米）
cut_length: 15	           # 要切割的长丝量（以毫米为单位）
cut_attempts: 1	           # 切割机尝试切割灯丝的次数


# 记录 --------------------------------------------------------------------------------------------------------------
#
# log_level 和 logfile_level 可以设置为其中之一（0 = 基本、1 = 信息、2 = 调试、3 = 跟踪、4 = 步进器移动）
# 通常，您可以将控制台日志记录保持在最低限度，同时仍将调试输出发送到 mmu.log 文件
# 增加控制台日志级别仅在初始设置期间真正有用，以节省必须不断打开日志文件的麻烦
#
log_level: 1
log_file_level: 3			# 也可以设置为-1以完全禁用日志文件
log_statistics: 1 			# 1 记录每个工具更改的统计信息（默认），0 禁用（但仍记录）
log_visual: 1				# 1 记录灯丝的视觉表示，0 = 禁用
log_startup_status: 1			# 是否在启动时将工具记录到门状态，1 = 摘要（默认），2 = 完整，0 = 禁用


# 移动速度 ------------------------------------------------------------------------------------------------------
#
# 长动作比小动作快，用于鲍登动作的大部分。请注意，您可以设置两个快速
# 加载速度取决于 MMU 认为它是从缓冲区还是从线轴中拉出。这通常有帮助
# 从线轴拉出时使用较低的速度，因为需要更大的力来克服摩擦力，这会阻止
# 丢失步骤。对于 NEMA14 电机，100mm/s 应该是“安静”的，但您可以降低以获得真正的低噪音
#
# 注意：编码器无法保持超过 350mm/s 的速度，因此请确保在非常高的速度下关闭“bowden_apply_ Correction”！
#
gear_from_buffer_speed: 150		# mm/s 加载灯丝时的正常速度。保守100mm/s，最大300mm/s左右
gear_from_buffer_accel: 400		# 加载灯丝时的正常加速度
gear_from_spool_speed: 80		# mm/s 首次加载（即从线轴拉出）时使用（较低）速度
gear_from_spool_accel: 100		# 从线轴加载时的加速度
#
gear_short_move_speed: 60		# mm/s 短距离移动时的速度（例如使用编码器增量缩回）
gear_short_move_accel: 600		# 通常与 gear_from_buffer_accel 相同（用于短距离运动）
gear_short_move_threshold: 70		# 控制“short_move”速度/加速度应用的移动距离
gear_homing_speed: 50			# mm/s 齿轮步进器仅归位移动的速度（例如归位至浇口或挤出机）

# 挤出机运动的速度。当齿轮和挤出机步进器同步移动时，将使用“同步”速度
#
extruder_load_speed: 16			# mm/s 负载在挤出机内从归位位置移动到熔化区的速度
extruder_unload_speed: 16		# mm/s 挤出机内部的卸载移动速度（从熔体区的初始移动速度是该速度的 50%）
extruder_sync_load_speed: 18		# 同步挤出机负载移动速度 mm/s
extruder_sync_unload_speed: 18		# 同步挤出机卸载移动速度 mm/s
extruder_homing_speed: 20		# mm/s 挤出机仅归位移动的速度（例如至工具头传感器）

# 选择器移动速度。 （加速度由上面设置的物理 MMU 限制定义并传递给选择器步进驱动器）
#
selector_move_speed: 200		# mm/s 选择器移动速度（非触摸）
selector_homing_speed: 60		# 初始选择器归位移动速度（非接触） mm/s
selector_touch_speed: 80		# 所有触摸选择器移动的毫米/秒速度（如果配置了 Stallguard）

# 选择器触摸（stallguard）操作。如果配置了stallguard，则可以使用它来打开触摸移动
# 可以检测阻塞的灯丝路径并尝试自动恢复，但设置起来比较困难
#
selector_touch_enable: 0		# 如果配置了选择器触摸操作，则可以使用它来禁用它 1=启用，0=禁用


# 门装卸 -----------------------------------------------------------------------------------------------
#
# 这些设置控制栅极处灯丝的加载和卸载。主要选项是使用限位开关
# 在门口（ala TradRack）或编码器（ERCF 默认）。您甚至可以同时拥有用于装载/停车的门传感器和
# 仍然使用编码器进行其他移动验证（请参阅高级“gate_endstop_to_encoder”选项）。
# 注意：`encoder`方法，由于其操作的性质，会有点过冲。这在实践中不是问题
# 因为超调将在随后的快速鲍登移动中得到简单的补偿。
#
# 可能的 gateway_homing_endtop 名称：
#   编码器 -使用编码器的移动检测灯丝位置
#   mmu_gate -使用门限位器检测灯丝（如果已配置）
#
gate_homing_endstop: encoder		# 门限位器名称，“编码器”强制使用编码器进行停车
gate_homing_max: 70			    # 到门的最大移动距离（编码器停车的实际移动距离）
gate_unload_buffer: 50			# 减少快速卸载的量，以便停车时灯丝不会过冲
gate_load_retries: 2			# MMU 在初始加载时尝试抓取灯丝的次数（最多 5 次）
gate_parking_distance: 25		# 大门内的停车位置（距大门终点站/编码器点的距离）
#gate_endstop_to_encoder:		# 门限位器和编码器之间的距离（如果两者都安装。+ve 如果编码器在限位器之后）
gate_autoload: 1			# 如果安装了预浇口传感器，则可以控制浇口的自动加载


# 鲍登管装载/卸载 ----------------------------------------------------------------------------------------
#
# 除了缓冲和非缓冲灯丝的不同 Bowden 加载速度之外，还可以检测丢失的情况
# 因重线轴“猛拉”而产生的步数。如果启用 Bowden 校正，驱动程序将“相信”编码器
# 读取并进行修正，使灯丝处于末端的“bowden_allowable_load_delta”范围内
# Bowden 位置（这确实需要可靠的编码器，不建议用于 >350mm/s 的超高速加载）
#
bowden_apply_correction: 0		# 1 启用，0 禁用。需要编码器
bowden_allowable_load_delta: 20	# 修正动作将尝试达到目标的距离（以毫米为单位）。需要编码器

# 此测试验证线材在快速 Bowden 运动之前是否脱离挤出机，以减少磨削线材的可能性
bowden_pre_unload_test: 1		# 1 在完全拉动之前检查鲍登运动（较慢），0 不检查（较快）。需要编码器

# ADVANCED：如果启用预卸载测试，这将控制对成功 Bowden 预卸载测试的检测并表示
# 实际运动与编码器看到的运动之间允许的不匹配分数。通常设置为 50% 容差
# 效果很好。增加将使测试更加宽容。 100% 的值本质上会禁用错误检测
#
bowden_pre_unload_error_tolerance: 50


# Extruder homing -----------------------------------------------------------------------------------------------------
#
# Happy Hare 需要一个靠近挤出机的参考“归位点”，以准确完成加载
# 工具头。该归位操作发生在快速鲍登负载之后，并且预计该负载
# 操作将使灯丝稍微接近归位点。如果使用工具头传感器，则该初始挤出机
# 归位是不必要的（但可以强制），因为归位将在挤出机内部进行以获得最佳精度。
#
# 除了入口传感器“mmu_extruder”之外，Happy Hare 还可以“感觉”挤出机齿轮入口
# 通过与它碰撞。因为此方法并不完全确定，您可能会发现必须找到最佳点
# 通过调整 TMC 电流减少来进行设置。此外，可以配置触摸（失速保护）感应，但
# 不幸的是，它不能很好地与某些外部 MCU 配合使用。请注意，碰撞检测期间减少电流可以
# 还可以防止不必要的灯丝网格化
#
# 可能的 homing_endtop 名称：
#   collision      - 通过监控编码器运动来检测与挤出机齿轮的碰撞（需要编码器）
#   mmu_gear_touch - 当齿轮步进器撞击挤出机时使用触摸检测（需要档位防护装置）
#   extruder       - 如果您配置了“细丝入口”终点挡块（需要“挤出机”终点挡块）
#   none           - 不要试图回家。仅在缺乏所有传感器选项时才有可能（不推荐）
# 注意：如果工具头传感器可用，则 homing_endstop 将被忽略，除非 `extruder_force_homing: 1`
#
extruder_homing_max: 100			# 尝试使挤出机复位所需前进的最大距离
extruder_homing_endstop: collision	# 灯丝归位方法/终点停止名称（如果工具头传感器不可用，则后备）
extruder_collision_homing_current: 25	# % gear_stepper 电流 (10%-100%) 在归位到挤出机归位时使用（100 禁用）

# 在没有工具头传感器的情况下，Happy Hare 将自动默认为挤出机入口检测，无论
# 此设置，但是如果您有工具头传感器，您仍然可以强制执行额外的（不必要的）步骤
# 首先回到挤出机入口，然后回到工具头传感器
#
extruder_force_homing: 0


# 默认工具头加载和卸载 ------------------------------------------------------------------------------
#
# 但是，可以定义高度自定义的加载和卸载序列，除非您有专门的
# 设置可能更容易选择内置工具头加载和卸载序列，该序列已经提供了
# 高度定制化。如果您需要更多控制，请编辑 _MMU_LOAD_SEQUENCE 和 _MMU_UNLOAD_SEQUENCE
# mmu_sequence.cfg 中的宏 -但要小心！
#
# MMU 必须在鲍登末端有一个已知点，从该点可以精确地加载挤出机。一般是这个
# 将是挤出机外部（由上述设置控制）或通过归位到工具头传感器。如果
# 你有工具头传感器，它经过挤出机齿轮，驱动程序需要知道最大距离（从末端）
# Bowden move) 尝试归航
#
toolhead_homing_max: 40			# 尝试回原点至定义的回原点停止位置时前进的最大距离

# 重要提示：接下来的三个设置基于工具头的物理尺寸
# 一旦确定了归位位置，Happy Hare 需要知道到喷嘴的最终移动距离。只有
# 您的设置的一个正确值 -使用“toolhead_ooze_reduction”（对应于留在
# 你的喷嘴）以控制负载上的过度渗漏。有关常见配置的建议值表，请参阅文档。
#
# 注意：如果您有工具头传感器，您可以自动计算这些参数！阅读有关
# `MMU_CALIBRATE_TOOLHEAD` command (https://github.com/moggieuk/Happy-Hare/wiki/Blobing-and-Stringing)
#
toolhead_extruder_to_nozzle: 70		# 挤出机齿轮（入口）到喷嘴的距离
toolhead_sensor_to_nozzle: 59		# 工具头传感器到喷嘴的距离（如果未安装则忽略）
#toolhead_entry_to_extruder: 8		# 从挤出机“入口”传感器到挤出机齿轮的距离（如果未安装则忽略）

# 调整：这是一个调整设置，表示当耗材被消耗时，喷嘴中留下多少残留耗材。
# 被删除，因此用于减少挤出机装载长度并防止过度渗出。
# 重要的是调整这个参数，而不是其他逻辑共享的维度。如果使用擦拭塔
# 如果您遇到了斑点，请增加该值（减少加载的灯丝数量）。如果你遇到差距，
# 减小这个值。如果间隙已经为 0，那么“toolhead_extruder_to_nozzle”设置可能不正确。
# 另请参阅“toolchange_retract”以了解最终的打印 blob 调整。
#
# 注意：如果您有工具头传感器，您可以自动计算此参数！阅读有关
# `MMU_CALIBRATE_TOOLHEAD` command (https://github.com/moggieuk/Happy-Hare/wiki/Blobing-and-Stringing)
#
toolhead_ooze_reduction: 0		# 减少挤出机装载长度以微调渗出（默认值：0mm）

# 添加到挤出机卸载运动的距离，以确保长丝不脱离挤出机。这增加了一定程度的容忍度
# 配置稍微不正确或挤出机打滑。但是，不要用作工具头设置不正确的借口
#
toolhead_unload_safety_margin: 10	# 额外移动安全余量（默认：10mm）

# 如果不使齿轮和挤出机同步，并且在更换工具后立即遇到“假”的堵塞检测，
# 这可能是因为长的Bowden管和/或大的内部直径导致丝材松弛。这个可选的动作
# 将在加载后拉紧丝材。
#
toolhead_post_load_tighten: 1		# 设置为1以启用，设置为0则禁用。如果'sync_to_extruder: 1'，则忽略此设置。


# 高级：控制成功挤出机加载/卸载运动的检测并表示允许的分数
# 实际运动与编码器看到的运动不匹配。设置为 100% 容差可有效关闭检查。
# 一些挤出机设计的移动距离很短，编码器可能无法检测到并导致错误。这
# 允许屏蔽这些错误。然而，该错误通常表明您的挤出机负载速度太高或
# 灯丝上的摩擦力太高，在这种情况下掩盖错误并不是一个好主意。尝试减少摩擦
# 首先降低速度！
#
toolhead_move_error_tolerance: 10


# 尖端成型 ---------------------------------------------------------------------------------------------------------
#
# 提示形成责任通常分为切片器（印刷中）和独立宏（非印刷中）。同时
# 每个工具更改都有一个选项可供选择，设置“force_form_tip_standalone: 1”将始终执行
# 独立序列。坦率地说，通常建议禁用切片机中的尖端成形（除非可能
# 初始冲压）并且专门在 Happy Hare 中进行，因此调整只需在一处完成。
#
# 当 Happy Hare 被要求形成提示时，它将运行引用的宏。提供两个参考示例：
#   _MMU_FORM_TIP .. 默认尖端形状类似于 Superslicer 和 Prusaslicer 等流行切片机
#   _MMU_CUT_TIP  .. 适用于 Filametrix (ERCFv2) 型工具头细丝切割系统
#
# 通常，增加快速移动的电流以确保高扭矩和无跳步是有用的
#
# 如果选择切片器尖端成型，则必须配置切片器在挤出机中留下细丝的位置，因为
# 没有办法确定这一点。如果所有尖端成型均由 Happy Hare 执行，则可以忽略这一点
#
force_form_tip_standalone: 0		 # 0 = 默认智能行为，1 = 始终进行独立尖端成形（关闭切片机！）
form_tip_macro: _MMU_FORM_TIP            # 调用宏的名称来执行尖端成形（或切割）操作
extruder_form_tip_current: 100		 # 形成尖端时使用的挤出机电流百分比 (100%-150%)（100 禁用）
slicer_tip_park_pos: 0			 # 这指定了切片器尖端成形移动后挤出机中长丝的位置


# 同步齿轮/挤出机运动 ----------------------------------------------------------------------------------
#
# 这控制打印操作期间挤出机和齿轮步进器是否同步
# 如果您通常以最大齿轮步进器电流运行，请考虑使用“sync_gear_current”减少它
# 如果配备 TMC 驱动器，可以控制齿轮和挤出机电机的电流以优化性能。
# 当使用同步电机打印时，这对于控制齿轮步进温度很有用
#
sync_to_extruder: 1			# 打印期间齿轮电机与挤出机同步
sync_gear_current: 35			# 打印期间与挤出机同步时使用的 gear_stepper 电流百分比 (10%-100%)
sync_form_tip: 1			# 在独立尖端形成期间同步（卸载的初始部分）

# 可以选择利用从 MMU 到 Bowden 路径中的“压缩/膨胀”传感器的反馈
# 挤出机确保两个电机从灯丝看来保持同步（信号反馈状态可以是
# 由一个或两个开关提供的二进制：-1（扩展）和 1（压缩），比例值在 -1.0 和 1.0 之间
# 需要[mmu_sensors]设置
#
sync_feedback_enable: 0			# 0 = 关闭（即使安装了传感器），1 = 打印时打开
sync_multiplier_high: 1.05		# 适用于齿轮步进器 `rotation_distance` 的最大系数
sync_multipler_low: 0.95		# 应用的最小因子


# 灯丝管理选项 ----------------------------------------------------------------------------------------
#
# -安装编码器后可进行堵塞检测，并且可以检测灯丝何时不移动并暂停打印
# -EndlessSpool 功能允许检测一个线轴上的跳动，并将工具自动映射到替代线轴上
# 门（线轴）。设置为“1”，此功能需要堵塞检测或门传感器或预门传感器。无尽线轴
# 可以选择扩展功能以尝试使用“endless_spool_on_load”加载空门。它可以
# 还可以配置为将灯丝剩余物弹出到指定的门，而不是默认到当前的门。一个习俗
# 门将禁用 EndlessSpool 的门前跳动检测，因为灯丝末端必须完全穿过
# 选择器移动的门
# -Spoolman 支持将使用配置了门的 SpoolId 从 spoolman 加载灯丝详细信息和颜色
#
enable_clog_detection: 1		# 0 = 禁用，1 = 静态长度堵塞检测，2 = 自动长度堵塞检测
enable_endless_spool: 1			# 0 = 禁用，1 = 启用无限线轴
endless_spool_on_load: 0		# 0 = 负载时不应用无限线轴，1 = 如果门为空则运行无限线轴
endless_spool_final_eject: 50		# 跳动时额外的卸载距离，以防止意外重新装载
endless_spool_eject_gate: -1		# 保留哪一个喷射灯丝的门。 -1 = 当前门
enable_spoolman: 0			# 0 = 禁用 spoolman 支持，1 = 启用 spoolman （需要 spoolman 设置）
pending_spool_id_timeout: 20           # 待处理的 spool_id（用 rfid 设置）经过多少秒后作废
#endless_spool_groups:			# 默认 EndlessSpool 组（请参阅文件后面的内容）


# 开启行为 ---------------------------------------------------------------------------------------------------
#
# MMU 可以根据之前的持久状态自动初始化。有 5 个级别，每个级别都会引入
# 需要逐渐减少初始设置的附加状态信息。更高级别假设你不碰
# 当 MMU 处于离线状态时，它可以准确地从上次中断的地方恢复过来！如果您确实触摸了它或感到困惑
# 然后发出适当的重置命令（例如 MMU_RESET）以使状态恢复到默认值。
# 如果您使用级别 2 及以上的持久状态，建议启用 `startup_status`
# Levels: 0 = 除校准数据外每次都重新开始（以前的默认行为）
#         1 = 恢复持久的无尽线轴组
#         2 = 另外恢复持久的工具到门的映射
#         3 = 另外恢复持久的门状态（灯丝可用性、材料和颜色、线轴ID）（默认）
#         4 = 另外恢复持久的工具、浇口和灯丝位置！ （MMU运行良好时推荐）
#
persistence_level: 3


# 打印统计数据 ---------------------------------------------------------------------------------------------------
#
# 这些参数决定打印统计数据如何在控制台中显示。这个表显示了很多数据，并且
# 可能比你想看到的还要多。您可以在下面启用/禁用您需要的选项。
# 
# +-----------+---------------------+----------------------+----------+
# |  114(46)  |      unloading      |       loading        | complete |
# |   swaps   | pre  |   -   | post | pre  |   -   | post  |   swap   |
# +-----------+------+-------+------+------+-------+-------+----------+
# | all time  | 0:07 | 47:19 | 0:00 | 0:01 | 37:11 | 33:39 |  2:00:38 |
# |     - avg | 0:00 |  0:24 | 0:00 | 0:00 |  0:19 |  0:17 |     1:03 |
# | this job  | 0:00 | 10:27 | 0:00 | 0:00 |  8:29 |  8:30 |    28:02 |
# |     - avg | 0:00 |  0:13 | 0:00 | 0:00 |  0:11 |  0:11 |     0:36 |
# |      last | 0:00 |  0:12 | 0:00 | 0:00 |  0:10 |  0:14 |     0:39 |
# +-----------+------+-------+------+------+-------+-------+----------+
#             注意：仅在 Python3 上正确格式化
# 
# 所需列的逗号分隔列表
# 选项：pre_unload、unload、post_unload、pre_load、load、post_load、total
console_stat_columns: pre_unload, unload, post_unload, pre_load, load, post_load, total

# 逗号分隔的行列表。顺序决定了它们的显示顺序。
# 选项：总计、total_average、job、job_average、last
console_stat_rows: total, total_average, job, job_average, last

# 您希望如何查看门的状态及其执行情况
#   string     - 差、好、完美等等。
#   percentage - 成功率
#   emoticon   - 有趣的悲伤到快乐的面孔（仅限python3）
console_gate_stat: emoticon

# 始终显示完整的统计表
console_always_output_full: 1	# 1 = 显示完整表格，0 = 仅显示已绝版的总计


# 工具更换斑点和拉线控制 -----------------------------------------------------------------------------
#
# 这些参数可用于优化更换工具时可能出现的串线和斑点。除了这些
# 控件，'toolhead_ooze_reduction' 可用于减少所有丝材进入挤出机的加载长度
# 情况。重要提示：因此配置顺序为：
#   1. 配置挤出机尺寸，如“toolhead_extruder_to_nozzle”等。这些尺寸基于几何形状。
#   2. 仅在必要时调整“toolhead_ooze_reduction”，以便灯丝在加载时_just_出现在喷嘴处
#   3. 只有这样，调整这些设置才能在打印中更换工具时控制拉丝和斑点
#
# 注意：所有这些设置仅在打印时有效
#
z_hop_height_toolchange: 1.0	# 换刀时 z_hop 移动的高度（以毫米为单位）
z_hop_height_error: 5.0		# 在暂停或出现错误时，为了避免在打印件上形成团状物，Z轴跳跃的高度（单位：毫米）
z_hop_speed: 150		# z_hop 移动速度 (mm/s)。如果设置了“z_hop_ramp”，则应该很快（x，y 行进速度）
z_hop_accel: 5000		# z 跳跃移动的加速度（受到打印机最大值的限制）
z_hop_ramp: 5			# 在提升过程中横向移动的距离（单位：毫米）。这有助于断裂丝线。方向自动确定。
toolchange_retract: 2		# 在更换工具时，为了防止产生团状物，进行的回缩/解除回缩距离。
toolchange_retract_speed: 20	# 回缩动作的速度（单位：毫米/秒）。
toolchange_unretract_speed: 20     # 更换工具时解除回缩动作的速度（单位：毫米/秒）


# 其他可配置，但相当固定的值 -------------------------------------------------------------------------
#
extruder: extruder		# MMU 正在使用的工具头挤出机的名称
timeout_pause: 72000		# 处于 MMU 暂停状态时使用的空闲超时（以秒为单位）
disable_heater: 600		# 在 MMU_PAUSE 状态下禁用热端加热器之前的延迟（以秒为单位）
default_extruder_temp: 200	# 在打印之外执行交换和形成尖端的基线温度
extruder_temp_variance: 2	# 等待挤出机温度时，这是 +/-允许的度数偏差 (>= 1)
auto_calibrate_gates: 0		# 高级：自动门（不是门#0）校准。 1=首次加载时自动校准，0=禁用
strict_filament_recovery: 0	# 如果启用带有工具头传感器的 MMU，这将导致灯丝位置恢复到
				# 执行额外的动作来寻找被困在挤出机之后、传感器之前的空间中的细丝
filament_recovery_on_pause: 1	# 1 = 运行快速检查以确定暂停/错误时的当前灯丝位置，0 = 禁用
retry_tool_change_on_error: 0	# 是否自动重试失败的换刀。如果启用，Happy Hare 将执行
				# 相当于“MMU_RECOVER”+“Tx”命令，这通常是必需的
				# 恢复。请注意，启用此功能可以掩盖 MMU 的问题
print_start_detection: 1	# 高级：启用 Happy Hare 自动检测打印和调用的开始和结束
				# _MMU_START_PRINT 和 _MMU_END_PRINT。如果您想包含在自己的宏中，请禁用
show_error_dialog: 0		# 1 = 除控制台消息外还显示弹出对话框，0 = 在控制台中显示错误
encoder_move_validation: 1	# 1 = Normally Encoder validates move distances are within given tolerance
				# 0 = 对许多移动禁用验证（消除移动之间的轻微暂停，但不太安全)
gcode_load_sequence: 0		# 非常高级：Gcode 加载顺序 1=启用，0=内部逻辑（默认）
gcode_unload_sequence: 1	# 非常高级：Gcode 卸载序列，1=启用，0=内部逻辑（默认）


# 高级：MMU 宏覆盖 --- 仅当您熟悉 KLIPPER 宏时才进行设置 -------------------------------
#
# 'pause_macro' 定义在 MMU 错误时调用哪个宏（必须将打印机置于暂停状态）
# 其他宏在'mmu_sequence.cfg'中有详细说明
#
pause_macro: PAUSE
action_changed_macro: _MMU_ACTION_CHANGED	    # 当动作（printer.mmu.action）改变时调用
print_state_changed_macro: _MMU_PRINT_STATE_CHANGED # 打印状态（printer.mmu.print_state）改变时调用
pre_unload_macro: _MMU_PRE_UNLOAD		    # 开始卸载之前调用
post_form_tip_macro: _MMU_POST_FORM_TIP		    # 尖端形成后立即调用
post_unload_macro: _MMU_POST_UNLOAD		    # 卸载完成后调用
pre_load_macro: _MMU_PRE_LOAD			    # 开始加载之前调用
post_load_macro: _MMU_POST_LOAD			    # 加载完成后调用
unload_sequence_macro: _MMU_UNLOAD_SEQUENCE_CUT	   # 非常高级：可选择基于“gcode_unload_sequence”进行调用
load_sequence_macro: _MMU_LOAD_SEQUENCE		    # 非常高级：可以选择基于“gcode_load_sequence”进行调用


# 高级：请参阅有关使用这些的文档-----------------------------------------------------------------------
#
# Examples...
# Gate:                #0      #1      #2      #3      #4      #5      #6      #7      #8
#gate_material:        PLA,    ABS,    ABS,    ABS+,   PLA,    PLA,    PETG,   TPU,    ABS
#gate_color:           red,    black,  yellow, green,  blue,   indigo, ffffff, grey,   black
#gate_spool_id:        3,      2,      1,      4,      5,      6,      7,      -1,     9
#gate_status:          1,      0,      1,      2,      2,     -1,     -1,      0,      1
#gate_speed_override:  100,    100,    100,    100,    100,    100,    100,    50,     100
#endless_spool_groups: 0,      1,      2,      1,      0,      0,      3,      4,      1
#
# Tool:                T0      T1      T2      T3      T4      T5      T6      T7      T8
#tool_to_gate_map:     0,      1,      2,      3,      4,      5,      6,      7,      8


# 高级/自定义 MMU：请参阅有关使用这些的文档 ------------------------------------------------------------
#
# 通常，所有这些设置都是根据您选择的“mmu_vendor”和“mmu_version”来设置的，但它们可以被覆盖。
# 如果您选择了“其他”供应商，则必须设置这些，否则您将获得任意 ERCFv1.1 默认值。
#
#cad_gate0_pos: 4.2			# 从终点站到第一个门的大约距离。仅用于粗略校准
#cad_gate_width: 21.0			# 每个门的宽度
#cad_bypass_offset: 0			# 从行程限制返回旁路的距离 (ERCF v2.0)
#cad_last_gate_offset: 2.0		# 从行程限制返回最后一个登机门的距离
#cad_selector_tolerance: 10.0 		# 允许多少额外的选择器移动
#
#encoder_default_resolution: 0.676	# 单个编码器“计数”的近似分辨率（毫米）。不用于测量

