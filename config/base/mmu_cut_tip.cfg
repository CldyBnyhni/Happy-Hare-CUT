########################################################################################################################
# 快乐兔子支持宏
# 用于“Filametrix”式刀头铣刀的独立刀尖切削
#
# 该文件是只读的
#
# 配置、设置
# 'mmu_parameters.cfg' 中的 'form_tip_macro: _MMU_CUT_TIP'
#
# 重要的:
# 灯丝的停放位置是相对于喷嘴而言的
# 表示切割后灯丝末端的位置。公园位置
# 很重要，Happy Hare 都用它来完成挤出机的卸载
# 以及计算在后续负载上灯丝前进多远。
#
# 使用此宏时，关闭切片机中的尖端成形功能很重要，
# 通过添加以下内容强制 Happy Hare 在加载灯丝时始终运行此命令：
# 'mmu_parameters.cfg' 中的 'force_form_tip_standalone: 1'
# 还决定“return_to_wipetower”与“enable_park”(mmu_macro_vars.cfg)
#
# 实施注意事项：报告刀具的位置很重要
# 通过变量“output_park_pos”将灯丝留在挤出机中，所以这
# 使用以下结构在 gcode 中动态设置：
# SET_GCODE_VARIABLE MACRO=_MMU_CUT_TIP VARIABLE=output_park_pos VALUE=..
#
[gcode_macro _MMU_CUT_TIP]
description: Cut filament by pressing the cutter on a pin with a horizontal movement

# -------------------------- 内部请勿触摸 -------------------------
variable_output_park_pos: 0 # 在此宏中动态设置

gcode:
    {% set final_eject = params.FINAL_EJECT|default(0)|int %}
    {% set vars = printer['gcode_macro _MMU_CUT_TIP_VARS'] %}
    {% set pin_loc_x, pin_loc_y = vars.pin_loc_xy|map('float') %}
    {% set pin_park_x_dist = vars['pin_park_x_dist']|float %}
    {% set retract_length = vars['retract_length']|float %}
    {% set simple_tip_forming = vars['simple_tip_forming']|default(true)|lower == 'true' %}
    {% set blade_pos = vars['blade_pos']|float %}
    {% set rip_length = vars['rip_length']|float %}
    {% set pushback_length = vars['pushback_length']|float %}
    {% set pushback_dwell_time = vars['pushback_dwell_time']|int %}
    {% set extruder_move_speed = vars['extruder_move_speed']|float %}
    {% set travel_speed = vars['travel_speed']|float %}
    {% set restore_position = vars['restore_position']|default(true)|lower == 'true' %}
    {% set extruder_park_pos = blade_pos + rip_length %}
    {% set pin_park_x_loc = pin_loc_x + pin_park_x_dist %}
    {% set pin_park_y_loc = pin_loc_y %}

    # 根据模式自定义操作的有用状态
    {% set runout = printer.mmu.runout %}
    {% set printing = printer.mmu.print_state == 'printing' %}

    {% if "xy" not in printer.toolhead.homed_axes %}
        G28 X Y
    {% endif %}

    SAVE_GCODE_STATE NAME=_MMU_CUT_TIP_state # 在可能的归位操作后保存，以防止记录 0,0
    SET_PRESSURE_ADVANCE ADVANCE=0 # 暂时禁用压力提前。快乐兔子会恢复它

    G90 # 绝对定位
    M83 # 相对挤压
    G92 E0
    {% set effective_retract_length = retract_length - printer.mmu.extruder_residual_filament - printer.mmu.toolchange_retract %}
    {% if effective_retract_length > 0 %}
        # 缩回以节省灯丝浪费，重复以允许一些冷却
        G1 E-{effective_retract_length} F{extruder_move_speed * 60}
        {% if simple_tip_forming %}
            G1 E{effective_retract_length / 2} F{extruder_move_speed * 60}
            G1 E-{effective_retract_length / 2} F{extruder_move_speed * 60}
        {% endif %}
    {% endif %}

    _FILAMETRIX_GANTRY_SERVO_UP
    _FILAMETRIX_MOVE_TO_CUTTER_PIN PIN_PARK_X_LOC={pin_park_x_loc} PIN_PARK_Y_LOC={pin_park_y_loc}
    _FILAMETRIX_GANTRY_SERVO_DOWN
    _FILAMETRIX_DO_CUT_MOTION PIN_PARK_X_LOC={pin_park_x_loc} RIP_LENGTH={rip_length}
    _FILAMETRIX_GANTRY_SERVO_UP

    # 可选择将残留的尖端推回到热端以避免将来卡住
    {% set effective_pushback_length = ([pushback_length, retract_length]|min) - printer.mmu.extruder_residual_filament - printer.mmu.toolchange_retract %}
    {% if effective_pushback_length > 0 %} 
        G1 E{effective_pushback_length} F{extruder_move_speed * 60}
        G4 P{pushback_dwell_time}
        G1 E-{effective_pushback_length} F{extruder_move_speed * 60}
    {% endif %}
    
    # 最终弹出用于测试
    {% if final_eject %}
        G1 E-80 F{extruder_move_speed * 60}
    {% endif %}

    # 动态设置Happy Hare所需的输出变量
    SET_GCODE_VARIABLE MACRO=_MMU_CUT_TIP VARIABLE=output_park_pos VALUE={extruder_park_pos}

    # 恢复状态和可选位置（通常在wipetower上）
    RESTORE_GCODE_STATE NAME=_MMU_CUT_TIP_state MOVE={1 if restore_position else 0} MOVE_SPEED={travel_speed}


###########################################################################
# 用于尖端切割的辅助宏
#
[gcode_macro _FILAMETRIX_MOVE_TO_CUTTER_PIN]
description: Helper to move the toolhead to the target pin in either safe or faster way, depending on toolhead clearance
gcode:
    {% set pin_park_x_loc = params.PIN_PARK_X_LOC|float %}
    {% set pin_park_y_loc = params.PIN_PARK_Y_LOC|float %}
    {% set vars = printer['gcode_macro _MMU_CUT_TIP_VARS'] %}

    {% set safe_margin_x, safe_margin_y = vars.safe_margin_xy|map('float') %}
    {% set travel_speed = vars['travel_speed']|float %}

    {% if ((printer.gcode_move.gcode_position.x - pin_park_x_loc)|abs < safe_margin_x) or ((printer.gcode_move.gcode_position.y - pin_park_y_loc)|abs < safe_margin_y) %}
        # 进行安全但较慢的旅行
        G1 X{pin_park_x_loc} F{travel_speed * 60}
        G1 Y{pin_park_y_loc} F{travel_speed * 60}
    {% else %}
        G1 X{pin_park_x_loc} Y{pin_park_y_loc} F{travel_speed * 60}
    {% endif %}


###########################################################################
# 用于尖端切割的辅助宏
#
[gcode_macro _FILAMETRIX_DO_CUT_MOTION]
description: Helper to do a single horizontal cut movement
gcode:
    {% set pin_park_x_loc = params.PIN_PARK_X_LOC | float %}
    {% set vars = printer['gcode_macro _MMU_CUT_TIP_VARS'] %}

    {% set pin_loc_x_compressed = vars['pin_loc_x_compressed']|float %}
    {% set cut_fast_move_fraction = vars['cut_fast_move_fraction']|float %}
    {% set cut_fast_move_speed = vars['cut_fast_move_speed']|float %}
    {% set cut_slow_move_speed = vars['cut_slow_move_speed']|float %}
    {% set cut_dwell_time = vars['cut_dwell_time']|float %}
    {% set evacuate_speed = vars['evacuate_speed']|float %}
    {% set rip_length = vars['rip_length']|float %}
    {% set rip_speed = vars['rip_speed']|float %}
    {% set fast_slow_transition_loc = (pin_loc_x_compressed - pin_park_x_loc) * cut_fast_move_fraction + pin_park_x_loc|float %}

    G1 X{fast_slow_transition_loc} F{cut_fast_move_speed * 60} # 快速移动以启动刀片与灯丝的接触
    G1 X{pin_loc_x_compressed} F{cut_slow_move_speed * 60} # 以慢动作进行切割
    G4 P{cut_dwell_time}
    {% if rip_length > 0 %}
        G1 E-{rip_length} F{rip_speed * 60}
    {% endif %}
    G1 X{pin_park_x_loc} F{evacuate_speed * 60} # 撤离


###########################################################################
# 用于尖端切割的辅助宏
#
[gcode_macro _FILAMETRIX_GANTRY_SERVO_DOWN]
description: Operate optional gantry servo operated pin
gcode:
    {% set vars = printer['gcode_macro _MMU_CUT_TIP_VARS'] %}
    {% set gantry_servo_enabled = vars['gantry_servo_enabled']|default(true)|lower == 'true' %}
    {% set angle = vars['gantry_servo_down_angle']|float %}

    {% if gantry_servo_enabled %}
        SET_SERVO SERVO=mmu_gantry_servo ANGLE={angle}
    {% endif %}


###########################################################################
# 用于尖端切割的辅助宏
#
[gcode_macro _FILAMETRIX_GANTRY_SERVO_UP]
description: Operate optional gantry servo operated pin
gcode:
    {% set vars = printer['gcode_macro _MMU_CUT_TIP_VARS'] %}
    {% set gantry_servo_enabled = vars['gantry_servo_enabled']|default(true)|lower == 'true' %}
    {% set angle = vars['gantry_servo_up_angle']|float %}

    {% if gantry_servo_enabled %}
        SET_SERVO SERVO=mmu_gantry_servo ANGLE={angle}
    {% endif %}

