########################################################################################################################
# 快乐兔子支持宏
# Happy Hare 状态变化的标注
#
# 该文件是只读的
#

###########################################################################
# 当MMU动作状态改变时调用
#
# `ACTION` 参数将包含当前的操作字符串
# （也可在 `printer.mmu.action` 打印机变量中使用）。
# 之前的操作也可以在“OLD_ACTION”中使用。
#
# 有关操作字符串的完整列表，请参阅 Happy Hare README，但快速参考是：
#
# 空闲|加载|卸载|加载分机|退出分机|成型提示|加热|检查|归位|选择空闲
# |Loading|Unloading|Loading Ext|Exiting Ext|Forming Tip|Heating|Checking|Homing|Selecting
#
# 这里的参考逻辑驱动一组可选的 LED
#
[gcode_macro _MMU_ACTION_CHANGED]
description: Called when an action has changed
gcode:
    {% set vars = printer['gcode_macro _MMU_STATE_VARS'] %}
    {% set action = params.ACTION|string %}
    {% set old_action = params.OLD_ACTION|string %}

    _MMU_LED_ACTION_CHANGED {rawparams}

    {% if not vars.user_action_changed_extension == "" %} 
        {vars.user_action_changed_extension} {rawparams}
    {% endif %}


###########################################################################
# MMU打印状态改变时调用
#
# `STATE` 参数将包含当前状态字符串
#（也可在`printer.mmu.print_state`打印机变量中使用）
# 之前的操作在“OLD_STATE”中也可用。
#
# 有关状态字符串和状态转换的完整列表，请参阅 Happy Hare 自述文件
# 图，但快速参考是：
#
#  初始化|就绪|开始|打印|完成|取消|错误|pause_locked|暂停|待机
#  initialized|ready|started|printing|complete|cancelled|error|pause_locked|paused|standby
#
# 这里的参考逻辑驱动一组可选的 LED
#
[gcode_macro _MMU_PRINT_STATE_CHANGED]
description: Called when print state changes
gcode:
    {% set vars = printer['gcode_macro _MMU_STATE_VARS'] %}
    {% set state = params.STATE|string %}
    {% set old_state = params.OLD_STATE|string %}

    _MMU_LED_PRINT_STATE_CHANGED {rawparams}

    {% if not vars.user_print_state_changed_extension == "" %} 
        {vars.user_print_state_changed_extension} {rawparams}
    {% endif %}


###########################################################################
# MMU gateway_map（包含灯丝信息）时调用
# 类型、颜色、可用性和 spoolId) 已更新
#
# `GATE` 参数将包含更新的门，如果全部更新则为 -1
#
# 这里的参考逻辑驱动一组可选的 LED
#
[gcode_macro _MMU_GATE_MAP_CHANGED]
description: Called when gate map is updated
gcode:
    {% set vars = printer['gcode_macro _MMU_STATE_VARS'] %}
    {% set gate = params.GATE|int %}

    _MMU_LED_GATE_MAP_CHANGED {rawparams}

    {% if not vars.user_gate_map_changed_extension == "" %} 
        {vars.user_gate_map_changed_extension} {rawparams}
    {% endif %}

