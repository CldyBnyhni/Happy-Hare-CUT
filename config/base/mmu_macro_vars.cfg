########################################################################################################################
# 快乐兔子支持宏配置
#
# 根据您的设置编辑此文件
#
# Happy Hare 提供的支持宏集可以通过编辑此处声明的宏“变量”来定制。
#
# 此配置将在版本之间自动保留和升级（以前的配置文件的备份将
# 始终供您参考）。如果您想要自定义宏超出了通过这些变量所能实现的范围
# 强烈建议您将宏复制到新名称并更改“mmu_parameters.cfg”中的回调宏名称
# 这样，默认宏仍然可以升级，但您的自定义将保持不变
#


# 持续状态 ---------------------------------------------------------
# Happy Hare 将配置和状态存储在 klipper 变量文件中。
# 因为只能有一个“save_variables”文件，如果你已经
# 有一个你需要将两者合并并适当地指向它
#
[save_variables]
filename: {klipper_config_home}/mmu/mmu_vars.cfg

# 特氟龙长度 ---------------------------------------------------------
[gcode_macro _MMU_BOWDEN_LENGTH]
description: MMU特氟龙长度
gcode:
variable_bowden_length                     : 1150      ; 测量MMU到挤出头的特氟龙长度-50
variable_feedback_length                   : 0       ; 测量MMU到缓冲器出口的长度

# 打印开始/结束 ---------------------------------------------------------
#   (base/mmu_software.cfg)
#
[gcode_macro _MMU_SOFTWARE_VARS]
description: Happy Hare optional configuration for print start/end checks
gcode: # 留空

# 这些变量控制可选的 MMU_START_SETUP 和 MMU_START_LOAD_INITIAL_TOOL 宏的行为
variable_user_pre_initialize_extension      : "G28"	; 在 MMU_START_SETUP 开始时执行。常用G28到家
variable_octoprint_compat                   : False	; 真正与 Octoprint 打印作业流兼容
variable_home_mmu                           : False	; True/False, 打印开始前是否归位 mmu
variable_check_gates                        : True	    ; True/False，是否检查灯丝已加载到所有使用的门中
variable_load_initial_tool                  : True	    ; True/False, 是否自动加载初始工具

# 这些变量控制可选 MMU END 宏的行为
variable_eject_tool                         : True	    ; True/False, 打印结束时是否弹出工具
variable_reset_ttg                          : False	; True/False, 打印结束时是否重置TTG图
variable_dump_stats                         : True	    ; True/False, 是否在打印结束时显示打印统计信息


# 状态机变化 ---------------------------------------------------
#   (base/mmu_state.cfg)
#
[gcode_macro _MMU_STATE_VARS]
description: Happy Hare configuration for state change hooks
gcode: # 留空

# 您可以通过以下方式将功能扩展到所有 Happy Hare 状态更改宏
# 添加命令（或调用您的 gcode 宏）。例如对于额外的
# LED 逻辑
variable_user_action_changed_extension      : ''	   ; 在具有重复参数的默认逻辑之后执行
variable_user_print_state_changed_extension : ''	   ; 在具有重复参数的默认逻辑之后执行
variable_user_gate_map_changed_extension    : ''	   ; 在具有重复参数的默认逻辑之后执行


# LED CONTROL -------------------------------------------------------------
# Only configure if you have LEDs installed
#   (base/mmu_led.cfg)
#
[gcode_macro _MMU_LED_VARS]
description: Happy Hare led macro configuration variables
gcode: # Leave empty

# 不提供动作状态时 LED 段的默认效果
# 这可以是任何效果名称、“r,g,b”颜色或内置功能效果：
#   'off'             - LED 熄灭
#   'on'              - LED 为白色
#   'gate_status'     - 指示登机口可用性
#   'filament_color'  - 指示灯丝颜色
#   'slicer_color'    - 显示切片器为每个门定义的设置颜色（printer.mmu.slicer_color_rgb）
variable_led_enable             : True			        ; 启动时是否启用LED（MMU_LED可以控制）
variable_default_exit_effect    : "gate_status"		; 关闭|gate_status|灯丝颜色|切片器颜色off|gate_status|filament_color|slicer_color
variable_default_entry_effect   : "filament_color"	    ; 关闭|gate_status|灯丝颜色|切片器颜色off|gate_status|filament_color|slicer_color
variable_default_status_effect  : "filament_color"	    ; 开|关|gate_status|灯丝颜色|切片器颜色on|off|gate_status|filament_color|slicer_color
variable_white_light            : (1, 1, 1)		    ; 静态白光的 RGB 颜色
variable_black_light            : (.01, 0, .02)		; RGB颜色用来表示“黑色”（灯丝）
variable_empty_light            : (0, 0, 0)		    ; RGB颜色用于表示空门


# SEQUENCE MACRO - PARKING MOVEMENT CONTROL -------------------------------
# Configure carefully if you 'enable_park: True'
#   (base/mmu_sequence.cfg)
#
[gcode_macro _MMU_SEQUENCE_VARS]
description: Happy Hare sequence macro configuration variables
gcode: # 留空

# 这些控制换刀期间刀头的移动。
# 如果“enable_park: False”，则打印时将禁用所有移动，除非
# 处理跑动，其中“enable_runout_park”控制停车。允许
# 停车只是为了处理跳动或排除跳动。外出时停车
# 打印由“enable_standalone_park”控制。如果启用停车
# 'restore_xy_pos' 允许将工具头 x,y 位置恢复到
# 被推迟到切片器。这会减少打印的停留时间
# （注意：z 高度将始终被恢复）
#
variable_enable_park            : False	            ; True = 打印时启用停放移动（不是用完），False = 禁用
variable_enable_park_runout     : True  		        ; True = 在跳动处理期间启用停车移动，False = 禁用
variable_enable_park_standalone : False		        ; True = 不打印时启用停放移动，False = 禁用
variable_restore_xy_pos         : "last"	            ; last|next|none - 上一个|下一个|没有 换刀后刀头应移动到什么 x,y 位置
variable_park_xy                : 50, 50	            ; 换刀停放位置坐标
variable_park_z_hop             : 1.0		            ; 换刀时的附加 Z_hop (mm)（印刷版和绝版版）
variable_travel_speed           : 200		            ; XY 移动速度（毫米/秒）
variable_lift_speed             : 15		            ; Z 轴移动速度（毫米/秒）
variable_auto_home              : False		            ; True = 必要时自动返回，False = 禁用
variable_park_after_form_tip    : False		        ; True = 如果刀尖切削延迟移动到停放位置，False = 立即停放
variable_timelapse              : False		        ; True = 加载后拍摄帧快照，False = 禁用

# 您可以通过添加将功能扩展到所有 Happy Hare 序列宏
# 一个命令（或调用你的 gcode 宏）
variable_user_pre_unload_extension  : ''	            ; 默认逻辑后执行
variable_user_post_unload_extension : ''	             ; 默认逻辑后执行
variable_user_pre_load_extension    : ''	            ; 默认逻辑后执行
variable_user_post_load_extension   : ''	            ; 在默认逻辑之后但恢复工具头位置之前执行


# 剪切_提示-----------------------------------------------------------------
# 如果使用tip成型则不需要配置
#   (base/mmu_cut_tip.cfg)
#
[gcode_macro _MMU_CUT_TIP_VARS]
description: Happy Hare toolhead tip cutting macro configuration variables
gcode: # 留空

# 刀头切削宏是否将刀头返回到初始状态
# 切割完成后的位置（通常是wipetower）。如果使用停车位
# 您可能想要禁用此逻辑并设置 'park_after_form_tip: True'
variable_restore_position       : True		             ; True = 返回初始位置，False = 不返回

# 内部喷嘴尖端到切割刀片的距离。这个维度
# 基于您的工具头，不应用于调整
# 注意：如果您有工具头传感器，则可以自动确定此变量！
# Read https://github.com/moggieuk/Happy-Hare/wiki/Blobing-and-Stringing
variable_blade_pos              : 37.5		             ; 距内部喷嘴尖端的距离（毫米）

# 切割前缩回的距离，这可以减少浪费的灯丝
#（留在挤出机中）但如果设置太大和/或如果
# 热端组件中存在间隙。这必须小于“blade_pos”
variable_retract_length         : 32.5		             ; （比“blade_pos”小 5mm 是一个很好的起点）

# 是否在初始缩回后执行简单的尖端成形动作
# 启用此功能会增加一些切割时间，但会提供一些额外的冷却
# 熔化长丝的时间并避免某些热端潜在的堵塞
variable_simple_tip_forming     : True		             ; True = 执行简单的尖端成形，False = 跳过

# 这应该是刀架刚好位于刀臂的位置
# 轻轻触碰压脚
variable_pin_loc_xy             : 14, 250	             ; 压脚的 x,y 坐标

# 这个距离被添加到'pin_loc_x'以确定起始位置
# 并创造一个小的安全距离，有助于产生动力
variable_pin_park_x_dist        : 5.0		             ; 距离（毫米）

# 刀具完全压缩时刀头的位置。应该离开
# 一个小的净空（应该比 0 稍大一些，或者任何 xmin ）
# 避免撞击工具头或龙门架
variable_pin_loc_x_compressed   : 0.5		             ; x 坐标

# 切割后缩回长度和速度，以免刀片不
# 返回原点时卡住
variable_rip_length             : 1.0		             ; 缩回以帮助杠杆减压的距离（以毫米为单位）（>= 0）
variable_rip_speed              : 3		                 ; 速度 毫米/秒

# 将剩余尖端从冷端推回到热端。这确实
# 不必一路推回去，只要保证灯丝就够了
# 片段留在热端。不能大于“retract_length”
variable_pushback_length        : 5.0		             ; 距离（毫米）
variable_pushback_dwell_time    : 0		                 ; 推回后停留的时间（以毫秒为单位）

# 尖端切割速度相关设置
# 请注意，如果切割速度太快，步进器可能会丢失步数。
# 因此，对于切割：
# -我们首先快速行动，积累一些动力并获得晋级
#  刀片与灯丝初次接触
# - 然后我们慢慢地进行实际的切割
variable_travel_speed           : 150		             ; 速度 毫米/秒
variable_cut_fast_move_speed    : 32	                 ; 速度 毫米/秒
variable_cut_slow_move_speed    : 8			             ; 速度 毫米/秒
variable_evacuate_speed         : 150		             ; 速度 毫米/秒
variable_cut_dwell_time         : 50		             ; 停留在切割点的时间（以毫秒为单位）
variable_cut_fast_move_fraction : 1.0		             ; 使用快速移动的移动比例
variable_extruder_move_speed    : 25		             ; 所有挤出机运动的速度 mm/s

# 快速与慢速行驶的安全裕度。当行进至图钉位置时
# 如果我们距离旗杆比这更近，我们会进行更安全但更长的移动
# 指定边距。通常将它们设置为工具头的大小
#（加上一个小边距）应该足够好了
variable_safe_margin_xy         : 30, 30		         ; 大约工具头宽度+5mm，高度+5mm）

# 如果安装了龙门舵机选件，则启用舵机并设置升降
# 角度位置
variable_gantry_servo_enabled   : True		             ; True = 启用，False = 禁用
variable_gantry_servo_down_angle: 55		             ; 销钉展开时的角度
variable_gantry_servo_up_angle  : 180		             ; 销缩回时的角度


# FORM_TIP ----------------------------------------------------------------
# 如果使用尖端切割则不需要配置
#   (base/mmu_form_tip.cfg)
#
[gcode_macro _MMU_FORM_TIP_VARS]
description: Happy Hare tip forming macro configuration variables
gcode: # 留空

# 步骤 1 -捣实
# 冲压是冷却移动之前对长丝的初始挤压，并且是
# 以总体积和挤压强度的进展来描述
# 打印/独立。这可以在打印或打印时单独控制
# 独立
variable_ramming_volume            : 0		             ; 体积（以 mm^3 为单位），0 = 禁用（可以选择让切片器执行此操作）
variable_ramming_volume_standalone : 0		             ; 体积（以 mm^3 为单位），0 = 禁用

# 可选择设置温度变化（降低）。等待将会发生
# 喷嘴分离前 if 'use_fast_skinnydip: F​​alse' else 冷却后
# 动作。尖端创建完成后温度将恢复
variable_toolchange_temp        : 0		                 ; 0 = 不改变温度，否则要设置温度
variable_toolchange_fan_assist  : False		         ; 是否使用部分冷却风扇以加快温度变化
variable_toolchange_fan_speed   : 50		             ; 如果启用 fan_assist，则风扇速度%

# 步骤 2 -喷嘴分离
# 然后通过快速移动将长丝快速从熔化区分离
# 然后减慢行进距离冷却管的剩余距离。这
# 初始快速移动应与挤出机能够轻松执行的速度一样快。
# 较慢移动的一个很好的起点是 unloading_speed_start/cooling_moves。
# 动作太快或太慢会导致尖端或毛发过长
variable_unloading_speed_start  : 80		             ; 初始快速移动的速度（以毫米/秒为单位）t
variable_unloading_speed        : 18		             ; 缓慢移动至冷却区的速度（毫米/秒）

# 第 3 步 -冷却动作
# 冷却移动使灯丝在不断向后移动的同时变硬
# 并在挤出机的冷却管部分来回，以防止出现球根状
# 尖端成型。冷却管位置从内部喷嘴测量
# 刚刚经过加热器块的顶部（通常添加一个
# 几毫米以确保尖端位于冷却部分。冷却管
# 长度就是从这里到散热器顶部的距离（这是长度
# 冷却动作的长度）。最后的冷却动作是快速移动
# 断开形成的字符串。
variable_cooling_tube_position  : 35		              ; 冷却管启动。 DragonST:35、DragonHF:30、Mosquito:30、Revo:35、RapidoHF:27
variable_cooling_tube_length    : 15		              ; 运动长度。 DragonST:15、DragonHF:10、Mosquito:20、Revo:10、RapidoHF:10
variable_initial_cooling_speed  : 10		              ; 初始慢速移动（毫米/秒）以固化尖端并冷却已形成的线
variable_final_cooling_speed    : 50		              ;快速移动 (mm/s) 太快：弹出时尖端变形，太慢：长绳/无分离
variable_cooling_moves          : 4		                  ; 来回冷却动作的次数（2-4 是一个好的开始）

# 步骤 4 -裸泳
# Skinnydip 是一个高级的最后一步，可能对某些人有好处
# PLA 等材料可烧掉持久的极细毛发。工作
# 插入深度至关重要（从禁用开始，最后调整）
# 作为参考，内部喷嘴的距离为
# Cooling_tube_position + Cooling_tube_length，加热器顶部
# 块距离cooling_tube_length远。
variable_use_skinnydip          : True		          ; True = 启用 Skinnydip，False = 禁用 Skinnydip 移动
variable_skinnydip_distance     : 30		              ; 从冷却管末端开始将灯丝重新插入热端的距离
variable_dip_insertion_speed    : 30		              ; 中/慢插入速度毫米/秒 -足够长以熔化细毛，太慢会拉起熔化的细丝
variable_dip_extraction_speed   : 70		              ; 速度毫米/秒 -大约 2 倍插入速度，以防止形成新毛发
variable_melt_zone_pause        : 0			              ; 如果熔化区域以毫秒为单位则暂停。默认 0
variable_cooling_zone_pause     : 0			              ; 如果冷却区在浸入毫秒后暂停。默认 0
variable_use_fast_skinnydip     : False		          ; False = 在 SkinnyDip 移动期间跳过工具头温度更改等待

# 第 5 步 -停车
# 停放灯丝准备弹出
variable_parking_distance       : 0			               ; 定位 mm 以将细丝停放在尖端成型结束时，0 = 离开尖端成型后细丝结束的位置
variable_extruder_eject_speed   : 25		               ; 用于 Parking_distance 的速度 mm/s（以及测试时的 Final_eject）


# 客户端宏 -----------------------------------------------------------
# 如果你正在使用随 Happy Hare 提供的推荐的 PAUSE/RESUME/CANCEL_PRINT 宏，
# 这些变量允许进行自定义和基本的扩展。
#   (optional/client_macros.cfg)
#
[gcode_macro _MMU_CLIENT_VARS]
description: Happy Hare client macro configuration variables
gcode: # 留空

variable_retract                : 1.0     ; 在常规暂停或取消时（非MMU错误）进行回缩的距离（单位：毫米）
variable_retract_speed          : 20     ; 回缩运动的速度（单位：毫米/秒）
variable_unretract_speed        : 20     ; 解除回缩运动的速度（单位：毫米/秒）

# 您可以通过添加命令（或调用您的 gcode）来扩展功能
# (对于宏)。例如，用于额外的LED控制或自定义操作。
variable_user_pause_extension   : ''		               ; klipper 基础暂停后执行
variable_user_resume_extension  : ''		               ; 在 klipper 基础恢复之前执行
variable_user_cancel_extension  : ''		               ; 在klipper基cancel_print之前执行


###########################################################################
# 工具更换宏
# 这是在安装时自动创建的，但您可以增加或
# 减少此列表以匹配您正在运行的工具数量
# 注意：这样做很烦人，但像 Mainsail 这样的接口依赖
# 真正的宏定义使工具在 UI 中可见
#
{tx_macros}

[gcode_macro MMU_MAP]
description: 门映射
gcode:
    {% set T0 = params.T0|default(0)|int %}
    {% set T1 = params.T1|default(1)|int %}
    {% set T2 = params.T2|default(2)|int %}
    {% set T3 = params.T3|default(3)|int %}
    MMU_REMAP_TTG MAP={T0},{T1},{T2},{T3}

    [gcode_macro MMU_GROUPS]
description: 无尽耗材映射
gcode:
    {% set T0 = params.T0|default(0)|int %}
    {% set T1 = params.T1|default(1)|int %}
    {% set T2 = params.T2|default(2)|int %}
    {% set T3 = params.T3|default(3)|int %}
    MMU_ENDLESS_SPOOL GROUPS={T0},{T1},{T2},{T3}