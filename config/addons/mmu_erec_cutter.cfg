# 单独包含伺服硬件定义以允许自动升级
[include mmu_erec_cutter_hw.cfg]

###########################################################################
# 可选 EREC 细丝切割器支持
#
# https://github.com/kevinakasam/ERCF_Filament_Cutter
# 
# 这是支持 MMU 灯丝切割的补充宏
# ERCF 设计。
#
# 配置：
# 1. 将其添加到您的 Printer.cfg 中：
#
#   [include mmu/addons/mmu_erec_cutter.cfg]
#
# 2. 在 mmu_macro_vars.cfg 中，更改此行：
#
#   variable_user_post_unload_extension ：“EREC_CUTTER_ACTION”
#
# 3. 调整下面的伺服配置和宏“变量”
#

# EREC 刀具配置 -----------------------------------------------
#   (addons/mmu_erec_cutter.cfg)
#
[gcode_macro _EREC_VARS]
description: Empty macro to store the variables
gcode: # 留空

# 这些变量控制舵机运动
variable_servo_closed_angle   : 70	; Bowden 对齐 MMU 的闭合位置伺服角度
variable_servo_open_angle     : 10	; 伺服角度打开刀具并将 Bowden 移离 MMU
variable_servo_duration       : 0.4	; PWM脉冲激活伺服的时间（s）
variable_servo_idle_time      : 1.0	; 让舵机到达其位置的时间（s）

# 进给和切割长度的控制
variable_feed_length          : 58	; 从闸门停放位置到刀片位置的距离（毫米）
variable_cut_length           : 10	; 要切割的长丝量（以毫米为单位）
variable_cut_attempts         : 1	; 切割机尝试切割灯丝的次数


###########################################################################
# 执行切割步骤的宏。设计用于包含
# _MMU_POST_UNLOAD step
#
[gcode_macro EREC_CUTTER_ACTION]
description: Cut off the filament tip at the MMU after the unload sequence is complete
gcode:
    {% set vars = printer["gcode_macro _EREC_VARS"] %}
    
    _CUTTER_OPEN
    _MMU_STEP_MOVE MOVE={vars.feed_length + vars.cut_length}
    {% for i in range(vars.cut_attempts) %}
        _CUTTER_CLOSE
        _CUTTER_OPEN
    {% endfor %}
    _MMU_STEP_MOVE MOVE=-1
    _CUTTER_CLOSE
    
    _MMU_STEP_SET_FILAMENT STATE=2	# FILAMENT_POS_START_BOWDEN
    _MMU_STEP_UNLOAD_GATE		# 重复门停车移动
    _MMU_M400				# 等待两个移动队列

[gcode_macro _CUTTER_CLOSE]
description: Helper macro to set cutting servo the closed position
gcode:
    {% set vars = printer["gcode_macro _EREC_VARS"] %}
    SET_SERVO SERVO=cut_servo ANGLE={vars.servo_closed_angle} DURATION={vars.servo_duration}
    G4 P{vars.servo_idle_time * 1000}
    RESPOND MSG="EREC Cutter closed"
    M400

[gcode_macro _CUTTER_OPEN]
description: Helper macro to set cutting servo the open position
gcode:
    {% set vars = printer["gcode_macro _EREC_VARS"] %}
    SET_SERVO SERVO=cut_servo ANGLE={vars.servo_open_angle} DURATION={vars.servo_duration}
    G4 P{vars.servo_idle_time * 1000}
    RESPOND MSG="EREC Cutter open"
    M400

